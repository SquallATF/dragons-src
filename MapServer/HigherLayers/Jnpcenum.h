//
//filename:	jNpcEnum.h
//coder	:	Cho Wook Rea (4MLMman@hitel.net)(icq:74456993) 
//comp.	:	esofnet 
//compiler:	vc++ 6.0
//date	:	2000-06-22오후 2:13:29
//title	:	

#ifndef __jNpcEnum_h__
#define __jNpcEnum_h__
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

enum { // 사용안함. 예날소스랑 호환을 위해 만들어 났음.
	NPC_PATTERN_HOSTILE_,		// 적대적으로 바뀐다. 
	NPC_PATTERN_PEACE_,		// 평화적으로 바뀐다.
	NPC_PATTERN_FIND_CLOSE_PC_,		// 가까운 pc를 찾는다.(그쪽을 바라본다. )
	NPC_PATTERN_FIND_WEAK_PC_,		// 약한  pc를 찾는다.(그쪽을 바라본다. )
	NPC_PATTERN_FIND_STRONG_PC_,		// 강한  pc를 찾는다.(그쪽을 바라본다. )
	NPC_PATTERN_ACCESS_PC_,		// 찾은 PC에 적근한다. ( Hostile일경우 공격범위에 있으면 공격한다. peace일경우 접근해도 가만히 접근하는놈을 바라본다.  
	NPC_PATTERN_ACCESS_PC_ATTACKED_,		// 나를 공격한 Pc에 접근한다. 
	NPC_PATTERN_ATTACK_PC_,
	NPC_PATTERN_WANDER_RANGE_1_,// 배회한다. ( 1번 배회범위가 1이다. )
	NPC_PATTERN_WANDER_RANGE_2_,// 배화한다. ( 1번 배회범위가 2이다. )
	NPC_PATTERN_WANDER_RANGE_3_,// 배화한다. ( 1번 배회범위가 3이다. )
	NPC_PATTERN_ESCAPE_PC_,// 찾은 PC로 부터 도망간다. 
	NPC_PATTERN_ESCAPE_BATTLE_PC_,// 근처에 공격 PC가 있으면 멀리 도망간다. 
	NPC_PATTERN_RETURN_,// patterntype을 0으로 Setting한다.
	NPC_PATTERN_BACKDRAW_,// 공격하려는 놈뒤로 3타일 빠진다.
};

enum ENpcPattern
{
	eNPC_PATTERN_BEGIN,
	NPC_PATTERN_NO_MOVE_ = eNPC_PATTERN_BEGIN,		// 가만히 있는다.

	eNPC8_BEGIN,
	NPC_PATTERN_IAM_BOSS_8_ = eNPC8_BEGIN,
	NPC_PATTERN_TOBOSS_8_,
	NPC_PATTERN_MURI_8_,
	NPC_PATTERN_WANDER_8_,
	NPC_PATTERN_ACCESS_PC_8_,
	NPC_PATTERN_ATTACK_FORMATION_PC_8_,
	NPC_PATTERN_ATTACK_STANBY_PC_8_,
	NPC_PATTERN_ATTACK_READY_PC_8_,
	NPC_PATTERN_ATTACK_PC_8_,
	NPC_PATTERN_BACKDRAW_8_,
	eNPC8_END = NPC_PATTERN_BACKDRAW_8_,

	eNPC18_BEGIN,
	NPC_PATTERN_IAM_BOSS_18_ = eNPC18_BEGIN,
	NPC_PATTERN_TOBOSS_18_,
	NPC_PATTERN_WANDER_18_,
	NPC_PATTERN_MURI_18_,
	NPC_PATTERN_ACCESS_PC_18_,
	NPC_PATTERN_ATTACK_FORMATION_PC_18_,
	NPC_PATTERN_ATTACK_STANBY_PC_18_,
	NPC_PATTERN_ATTACK_READY_PC_18_,
	NPC_PATTERN_ATTACK_PC_18_,
	NPC_PATTERN_BACKDRAW_18_,
	NPC_PATTERN_TAME_,
	eNPC18_END = NPC_PATTERN_TAME_,

	eNPC28_BEGIN,
	NPC_PATTERN_IAM_BOSS_28_ = eNPC28_BEGIN,
	NPC_PATTERN_TOBOSS_28_,
	NPC_PATTERN_ACCESS_28_,
	NPC_PATTERN_WANDER_28_,
	NPC_PATTERN_MURI_28_,
	NPC_PATTERN_BACKDRAW_PC_28_,
	eNPC28_END = NPC_PATTERN_BACKDRAW_PC_28_,

	eNPC38_BEGIN,
	NPC_PATTERN_ACCESS_PC_38_ = eNPC38_BEGIN,
	NPC_PATTERN_ATTACK_FORMATION_PC_38_,
	NPC_PATTERN_ATTACK_STANBY_PC_38_,
	NPC_PATTERN_ATTACK_READY_PC_38_,
	NPC_PATTERN_ATTACK_PC_38_,
	NPC_PATTERN_WANDER_38_,
	NPC_PATTERN_MURI_38_,
	NPC_PATTERN_BACKDRAW_PC_38_,
	eNPC38_END = NPC_PATTERN_BACKDRAW_PC_38_,

	eNPC_GUARD_BEGIN,
	NPC_PATTERN_IAM_BOSS_GUARD_ = eNPC_GUARD_BEGIN,
	NPC_PATTERN_TOBOSS_GUARD_,
	NPC_PATTERN_WANDER_GUARD_,
	NPC_PATTERN_MURI_GUARD_,
	NPC_PATTERN_ACCESS_PC_GUARD_,
	NPC_PATTERN_ATTACK_FORMATION_PC_GUARD_,
	NPC_PATTERN_ATTACK_STANBY_PC_GUARD_,
	NPC_PATTERN_ATTACK_READY_PC_GUARD_,
	NPC_PATTERN_ATTACK_PC_GUARD_,
	NPC_PATTERN_BACKDRAW_PC_GUARD_,
	eNPC_GUARD_END = NPC_PATTERN_BACKDRAW_PC_GUARD_,


	NPC_PATTERN_EVENTING_MAUL_,
	NPC_PATTERN_WANDER_MAUL_,
	NPC_PATTERN_ATTACK_FORMATION_PC_MAUL_,
	NPC_PATTERN_ATTACK_STANBY_PC_MAUL_,
	NPC_PATTERN_ATTACK_READY_PC_MAUL_,
	NPC_PATTERN_ATTACK_MAUL_,
	NPC_PATTERN_BACKDRAW_MAUL_,
	NPC_PATTERN_ACCESS_PC_MAUL_,
	NPC_PATTERN_MAX
};

struct sNPCgeneratePosition
{
	short int curnpc;
	short int npcindex;
	short int eventno;
	short int x, y;
	short int maxno;
};

enum ENpcAni
{
	eMON1_NONE,		// 기본동작
	eMON1_BATTLE_NONE,	// 전투기본
	eMON1_ATTACKED,		// 맞기
	eMON1_DIE,			// 죽기....
	eMON1_BATTLE_WALK_,	// 기본걷기
	eMON1_BATTLE_ATTACK, // 한손공격
	eMAX_ENpcAni
};

#endif //__jNpcEnum_h__
